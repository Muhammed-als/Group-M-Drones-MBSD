/*
 * generated by Xtext 2.38.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSystemRootAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSystemRootSystemRootParserRuleCall_0_0 = (RuleCall)cSystemRootAssignment_0.eContents().get(0);
		private final Assignment cEntitiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEntitiesEntityParserRuleCall_1_0 = (RuleCall)cEntitiesAssignment_1.eContents().get(0);
		private final Assignment cRelationsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRelationsRelationParserRuleCall_2_0 = (RuleCall)cRelationsAssignment_2.eContents().get(0);
		
		//Model:
		//    systemRoot=SystemRoot
		//    entities+=Entity*
		//    relations+=Relation*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//systemRoot=SystemRoot
		//entities+=Entity*
		//relations+=Relation*
		public Group getGroup() { return cGroup; }
		
		//systemRoot=SystemRoot
		public Assignment getSystemRootAssignment_0() { return cSystemRootAssignment_0; }
		
		//SystemRoot
		public RuleCall getSystemRootSystemRootParserRuleCall_0_0() { return cSystemRootSystemRootParserRuleCall_0_0; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_1() { return cEntitiesAssignment_1; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_1_0() { return cEntitiesEntityParserRuleCall_1_0; }
		
		//relations+=Relation*
		public Assignment getRelationsAssignment_2() { return cRelationsAssignment_2; }
		
		//Relation
		public RuleCall getRelationsRelationParserRuleCall_2_0() { return cRelationsRelationParserRuleCall_2_0; }
	}
	public class SystemRootElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SystemRoot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cEntitiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntitiesEntityParserRuleCall_2_0 = (RuleCall)cEntitiesAssignment_2.eContents().get(0);
		private final Assignment cRelationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRelationsRelationParserRuleCall_3_0 = (RuleCall)cRelationsAssignment_3.eContents().get(0);
		
		//SystemRoot:
		//    'system' name=ID
		//    entities+=Entity*
		//    relations+=Relation*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'system' name=ID
		//entities+=Entity*
		//relations+=Relation*
		public Group getGroup() { return cGroup; }
		
		//'system'
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_2() { return cEntitiesAssignment_2; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_2_0() { return cEntitiesEntityParserRuleCall_2_0; }
		
		//relations+=Relation*
		public Assignment getRelationsAssignment_3() { return cRelationsAssignment_3; }
		
		//Relation
		public RuleCall getRelationsRelationParserRuleCall_3_0() { return cRelationsRelationParserRuleCall_3_0; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMissionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDroneGroupParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDroneParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cActionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cConstraintClassesParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Entity:
		//    Mission | DroneGroup | Drone | Action | ConstraintClasses;
		@Override public ParserRule getRule() { return rule; }
		
		//Mission | DroneGroup | Drone | Action | ConstraintClasses
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Mission
		public RuleCall getMissionParserRuleCall_0() { return cMissionParserRuleCall_0; }
		
		//DroneGroup
		public RuleCall getDroneGroupParserRuleCall_1() { return cDroneGroupParserRuleCall_1; }
		
		//Drone
		public RuleCall getDroneParserRuleCall_2() { return cDroneParserRuleCall_2; }
		
		//Action
		public RuleCall getActionParserRuleCall_3() { return cActionParserRuleCall_3; }
		
		//ConstraintClasses
		public RuleCall getConstraintClassesParserRuleCall_4() { return cConstraintClassesParserRuleCall_4; }
	}
	public class MissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Mission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMissionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDroneGroupKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDroneGroupAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cDroneGroupDroneGroupCrossReference_5_0 = (CrossReference)cDroneGroupAssignment_5.eContents().get(0);
		private final RuleCall cDroneGroupDroneGroupIDTerminalRuleCall_5_0_1 = (RuleCall)cDroneGroupDroneGroupCrossReference_5_0.eContents().get(1);
		private final Keyword cActionsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cActionsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cActionsActionElementCrossReference_9_0 = (CrossReference)cActionsAssignment_9.eContents().get(0);
		private final RuleCall cActionsActionElementIDTerminalRuleCall_9_0_1 = (RuleCall)cActionsActionElementCrossReference_9_0.eContents().get(1);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cActionsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final CrossReference cActionsActionElementCrossReference_10_1_0 = (CrossReference)cActionsAssignment_10_1.eContents().get(0);
		private final RuleCall cActionsActionElementIDTerminalRuleCall_10_1_0_1 = (RuleCall)cActionsActionElementCrossReference_10_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cConstraintsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cEqualsSignKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Assignment cConstraintsAssignment_12_3_0 = (Assignment)cGroup_12_3.eContents().get(0);
		private final CrossReference cConstraintsConstraintClassesCrossReference_12_3_0_0 = (CrossReference)cConstraintsAssignment_12_3_0.eContents().get(0);
		private final RuleCall cConstraintsConstraintClassesIDTerminalRuleCall_12_3_0_0_1 = (RuleCall)cConstraintsConstraintClassesCrossReference_12_3_0_0.eContents().get(1);
		private final Group cGroup_12_3_1 = (Group)cGroup_12_3.eContents().get(1);
		private final Keyword cCommaKeyword_12_3_1_0 = (Keyword)cGroup_12_3_1.eContents().get(0);
		private final Assignment cConstraintsAssignment_12_3_1_1 = (Assignment)cGroup_12_3_1.eContents().get(1);
		private final CrossReference cConstraintsConstraintClassesCrossReference_12_3_1_1_0 = (CrossReference)cConstraintsAssignment_12_3_1_1.eContents().get(0);
		private final RuleCall cConstraintsConstraintClassesIDTerminalRuleCall_12_3_1_1_0_1 = (RuleCall)cConstraintsConstraintClassesCrossReference_12_3_1_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Mission:
		//    'Mission' name=ID '{'
		//        'droneGroup' '=' droneGroup=[DroneGroup]
		//        'actions' '=' '[' actions+=[ActionElement] (',' actions+=[ActionElement])* ']'
		//        ('constraints' '=' '[' (constraints+=[ConstraintClasses] (',' constraints+=[ConstraintClasses])*)? ']')?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Mission' name=ID '{'
		//    'droneGroup' '=' droneGroup=[DroneGroup]
		//    'actions' '=' '[' actions+=[ActionElement] (',' actions+=[ActionElement])* ']'
		//    ('constraints' '=' '[' (constraints+=[ConstraintClasses] (',' constraints+=[ConstraintClasses])*)? ']')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Mission'
		public Keyword getMissionKeyword_0() { return cMissionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'droneGroup'
		public Keyword getDroneGroupKeyword_3() { return cDroneGroupKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//droneGroup=[DroneGroup]
		public Assignment getDroneGroupAssignment_5() { return cDroneGroupAssignment_5; }
		
		//[DroneGroup]
		public CrossReference getDroneGroupDroneGroupCrossReference_5_0() { return cDroneGroupDroneGroupCrossReference_5_0; }
		
		//ID
		public RuleCall getDroneGroupDroneGroupIDTerminalRuleCall_5_0_1() { return cDroneGroupDroneGroupIDTerminalRuleCall_5_0_1; }
		
		//'actions'
		public Keyword getActionsKeyword_6() { return cActionsKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_8() { return cLeftSquareBracketKeyword_8; }
		
		//actions+=[ActionElement]
		public Assignment getActionsAssignment_9() { return cActionsAssignment_9; }
		
		//[ActionElement]
		public CrossReference getActionsActionElementCrossReference_9_0() { return cActionsActionElementCrossReference_9_0; }
		
		//ID
		public RuleCall getActionsActionElementIDTerminalRuleCall_9_0_1() { return cActionsActionElementIDTerminalRuleCall_9_0_1; }
		
		//(',' actions+=[ActionElement])*
		public Group getGroup_10() { return cGroup_10; }
		
		//','
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//actions+=[ActionElement]
		public Assignment getActionsAssignment_10_1() { return cActionsAssignment_10_1; }
		
		//[ActionElement]
		public CrossReference getActionsActionElementCrossReference_10_1_0() { return cActionsActionElementCrossReference_10_1_0; }
		
		//ID
		public RuleCall getActionsActionElementIDTerminalRuleCall_10_1_0_1() { return cActionsActionElementIDTerminalRuleCall_10_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_11() { return cRightSquareBracketKeyword_11; }
		
		//('constraints' '=' '[' (constraints+=[ConstraintClasses] (',' constraints+=[ConstraintClasses])*)? ']')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_12_0() { return cConstraintsKeyword_12_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_12_1() { return cEqualsSignKeyword_12_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_12_2() { return cLeftSquareBracketKeyword_12_2; }
		
		//(constraints+=[ConstraintClasses] (',' constraints+=[ConstraintClasses])*)?
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//constraints+=[ConstraintClasses]
		public Assignment getConstraintsAssignment_12_3_0() { return cConstraintsAssignment_12_3_0; }
		
		//[ConstraintClasses]
		public CrossReference getConstraintsConstraintClassesCrossReference_12_3_0_0() { return cConstraintsConstraintClassesCrossReference_12_3_0_0; }
		
		//ID
		public RuleCall getConstraintsConstraintClassesIDTerminalRuleCall_12_3_0_0_1() { return cConstraintsConstraintClassesIDTerminalRuleCall_12_3_0_0_1; }
		
		//(',' constraints+=[ConstraintClasses])*
		public Group getGroup_12_3_1() { return cGroup_12_3_1; }
		
		//','
		public Keyword getCommaKeyword_12_3_1_0() { return cCommaKeyword_12_3_1_0; }
		
		//constraints+=[ConstraintClasses]
		public Assignment getConstraintsAssignment_12_3_1_1() { return cConstraintsAssignment_12_3_1_1; }
		
		//[ConstraintClasses]
		public CrossReference getConstraintsConstraintClassesCrossReference_12_3_1_1_0() { return cConstraintsConstraintClassesCrossReference_12_3_1_1_0; }
		
		//ID
		public RuleCall getConstraintsConstraintClassesIDTerminalRuleCall_12_3_1_1_0_1() { return cConstraintsConstraintClassesIDTerminalRuleCall_12_3_1_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_12_4() { return cRightSquareBracketKeyword_12_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ActionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ActionElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMissionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ActionElement:
		//    Action | Mission;
		@Override public ParserRule getRule() { return rule; }
		
		//Action | Mission
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Action
		public RuleCall getActionParserRuleCall_0() { return cActionParserRuleCall_0; }
		
		//Mission
		public RuleCall getMissionParserRuleCall_1() { return cMissionParserRuleCall_1; }
	}
	public class DroneGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.DroneGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDroneGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDronesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDronesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDronesDroneCrossReference_6_0 = (CrossReference)cDronesAssignment_6.eContents().get(0);
		private final RuleCall cDronesDroneIDTerminalRuleCall_6_0_1 = (RuleCall)cDronesDroneCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDronesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cDronesDroneCrossReference_7_1_0 = (CrossReference)cDronesAssignment_7_1.eContents().get(0);
		private final RuleCall cDronesDroneIDTerminalRuleCall_7_1_0_1 = (RuleCall)cDronesDroneCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//DroneGroup:
		//    'DroneGroup' name=ID '{'
		//        'drones' '=' '[' drones+=[Drone] (',' drones+=[Drone])* ']'
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'DroneGroup' name=ID '{'
		//    'drones' '=' '[' drones+=[Drone] (',' drones+=[Drone])* ']'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DroneGroup'
		public Keyword getDroneGroupKeyword_0() { return cDroneGroupKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'drones'
		public Keyword getDronesKeyword_3() { return cDronesKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//drones+=[Drone]
		public Assignment getDronesAssignment_6() { return cDronesAssignment_6; }
		
		//[Drone]
		public CrossReference getDronesDroneCrossReference_6_0() { return cDronesDroneCrossReference_6_0; }
		
		//ID
		public RuleCall getDronesDroneIDTerminalRuleCall_6_0_1() { return cDronesDroneIDTerminalRuleCall_6_0_1; }
		
		//(',' drones+=[Drone])*
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//drones+=[Drone]
		public Assignment getDronesAssignment_7_1() { return cDronesAssignment_7_1; }
		
		//[Drone]
		public CrossReference getDronesDroneCrossReference_7_1_0() { return cDronesDroneCrossReference_7_1_0; }
		
		//ID
		public RuleCall getDronesDroneIDTerminalRuleCall_7_1_0_1() { return cDronesDroneIDTerminalRuleCall_7_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class DroneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Drone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDroneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIpKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIpAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIpSTRINGTerminalRuleCall_5_0 = (RuleCall)cIpAssignment_5.eContents().get(0);
		private final Keyword cSerialNumberKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSerialNumberAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSerialNumberSTRINGTerminalRuleCall_8_0 = (RuleCall)cSerialNumberAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Drone:
		//    'Drone' name=ID '{'
		//        'ip' '=' ip=STRING
		//        'serialNumber' '=' serialNumber=STRING
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Drone' name=ID '{'
		//    'ip' '=' ip=STRING
		//    'serialNumber' '=' serialNumber=STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Drone'
		public Keyword getDroneKeyword_0() { return cDroneKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'ip'
		public Keyword getIpKeyword_3() { return cIpKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//ip=STRING
		public Assignment getIpAssignment_5() { return cIpAssignment_5; }
		
		//STRING
		public RuleCall getIpSTRINGTerminalRuleCall_5_0() { return cIpSTRINGTerminalRuleCall_5_0; }
		
		//'serialNumber'
		public Keyword getSerialNumberKeyword_6() { return cSerialNumberKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//serialNumber=STRING
		public Assignment getSerialNumberAssignment_8() { return cSerialNumberAssignment_8; }
		
		//STRING
		public RuleCall getSerialNumberSTRINGTerminalRuleCall_8_0() { return cSerialNumberSTRINGTerminalRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescriptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescriptionAssignment_5.eContents().get(0);
		private final Keyword cTypeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cTypeSTRINGTerminalRuleCall_8_0 = (RuleCall)cTypeAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Action:
		//    'Action' name=ID '{'
		//        'description' '=' description=STRING
		//        'type' '=' type=STRING
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Action' name=ID '{'
		//    'description' '=' description=STRING
		//    'type' '=' type=STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Action'
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_3() { return cDescriptionKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_5() { return cDescriptionAssignment_5; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_0() { return cDescriptionSTRINGTerminalRuleCall_5_0; }
		
		//'type'
		public Keyword getTypeKeyword_6() { return cTypeKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//type=STRING
		public Assignment getTypeAssignment_8() { return cTypeAssignment_8; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_8_0() { return cTypeSTRINGTerminalRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ConstraintClassesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ConstraintClasses");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConstraintParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPermissionConstraintParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRegulatoryConstraintParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ConstraintClasses:
		//    Constraint | PermissionConstraint | RegulatoryConstraint;
		@Override public ParserRule getRule() { return rule; }
		
		//Constraint | PermissionConstraint | RegulatoryConstraint
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Constraint
		public RuleCall getConstraintParserRuleCall_0() { return cConstraintParserRuleCall_0; }
		
		//PermissionConstraint
		public RuleCall getPermissionConstraintParserRuleCall_1() { return cPermissionConstraintParserRuleCall_1; }
		
		//RegulatoryConstraint
		public RuleCall getRegulatoryConstraintParserRuleCall_2() { return cRegulatoryConstraintParserRuleCall_2; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescriptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescriptionAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Constraint:
		//    'Constraint' name=ID '{'
		//        'description' '=' description=STRING
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Constraint' name=ID '{'
		//    'description' '=' description=STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Constraint'
		public Keyword getConstraintKeyword_0() { return cConstraintKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_3() { return cDescriptionKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_5() { return cDescriptionAssignment_5; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_0() { return cDescriptionSTRINGTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PermissionConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.PermissionConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPermissionConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescriptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescriptionAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PermissionConstraint:
		//    'PermissionConstraint' name=ID '{'
		//        'description' '=' description=STRING?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'PermissionConstraint' name=ID '{'
		//    'description' '=' description=STRING?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'PermissionConstraint'
		public Keyword getPermissionConstraintKeyword_0() { return cPermissionConstraintKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_3() { return cDescriptionKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//description=STRING?
		public Assignment getDescriptionAssignment_5() { return cDescriptionAssignment_5; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_0() { return cDescriptionSTRINGTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RegulatoryConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RegulatoryConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegulatoryConstraintKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cDescriptionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescriptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescriptionAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RegulatoryConstraint:
		//    'RegulatoryConstraint' name=ID '{'
		//        'description' '=' description=STRING?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'RegulatoryConstraint' name=ID '{'
		//    'description' '=' description=STRING?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'RegulatoryConstraint'
		public Keyword getRegulatoryConstraintKeyword_0() { return cRegulatoryConstraintKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'description'
		public Keyword getDescriptionKeyword_3() { return cDescriptionKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//description=STRING?
		public Assignment getDescriptionAssignment_5() { return cDescriptionAssignment_5; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_5_0() { return cDescriptionSTRINGTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFromAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFromEntityCrossReference_5_0 = (CrossReference)cFromAssignment_5.eContents().get(0);
		private final RuleCall cFromEntityIDTerminalRuleCall_5_0_1 = (RuleCall)cFromEntityCrossReference_5_0.eContents().get(1);
		private final Keyword cToKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cToAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cToEntityCrossReference_8_0 = (CrossReference)cToAssignment_8.eContents().get(0);
		private final RuleCall cToEntityIDTerminalRuleCall_8_0_1 = (RuleCall)cToEntityCrossReference_8_0.eContents().get(1);
		private final Keyword cTypeKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cEqualsSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cTypeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cTypeSTRINGTerminalRuleCall_11_0 = (RuleCall)cTypeAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Relation:
		//    'Relation' name=ID '{'
		//        'from' '=' from=[Entity]
		//        'to' '=' to=[Entity]
		//        'type' '=' type=STRING  // e.g., "dependency", "uses", "inherits"
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Relation' name=ID '{'
		//    'from' '=' from=[Entity]
		//    'to' '=' to=[Entity]
		//    'type' '=' type=STRING  // e.g., "dependency", "uses", "inherits"
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Relation'
		public Keyword getRelationKeyword_0() { return cRelationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//from=[Entity]
		public Assignment getFromAssignment_5() { return cFromAssignment_5; }
		
		//[Entity]
		public CrossReference getFromEntityCrossReference_5_0() { return cFromEntityCrossReference_5_0; }
		
		//ID
		public RuleCall getFromEntityIDTerminalRuleCall_5_0_1() { return cFromEntityIDTerminalRuleCall_5_0_1; }
		
		//'to'
		public Keyword getToKeyword_6() { return cToKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//to=[Entity]
		public Assignment getToAssignment_8() { return cToAssignment_8; }
		
		//[Entity]
		public CrossReference getToEntityCrossReference_8_0() { return cToEntityCrossReference_8_0; }
		
		//ID
		public RuleCall getToEntityIDTerminalRuleCall_8_0_1() { return cToEntityIDTerminalRuleCall_8_0_1; }
		
		//'type'
		public Keyword getTypeKeyword_9() { return cTypeKeyword_9; }
		
		//'='
		public Keyword getEqualsSignKeyword_10() { return cEqualsSignKeyword_10; }
		
		//type=STRING
		public Assignment getTypeAssignment_11() { return cTypeAssignment_11; }
		
		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_11_0() { return cTypeSTRINGTerminalRuleCall_11_0; }
		
		//// e.g., "dependency", "uses", "inherits"
		//  '}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	
	
	private final ModelElements pModel;
	private final SystemRootElements pSystemRoot;
	private final EntityElements pEntity;
	private final MissionElements pMission;
	private final ActionElementElements pActionElement;
	private final DroneGroupElements pDroneGroup;
	private final DroneElements pDrone;
	private final ActionElements pAction;
	private final ConstraintClassesElements pConstraintClasses;
	private final ConstraintElements pConstraint;
	private final PermissionConstraintElements pPermissionConstraint;
	private final RegulatoryConstraintElements pRegulatoryConstraint;
	private final RelationElements pRelation;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pSystemRoot = new SystemRootElements();
		this.pEntity = new EntityElements();
		this.pMission = new MissionElements();
		this.pActionElement = new ActionElementElements();
		this.pDroneGroup = new DroneGroupElements();
		this.pDrone = new DroneElements();
		this.pAction = new ActionElements();
		this.pConstraintClasses = new ConstraintClassesElements();
		this.pConstraint = new ConstraintElements();
		this.pPermissionConstraint = new PermissionConstraintElements();
		this.pRegulatoryConstraint = new RegulatoryConstraintElements();
		this.pRelation = new RelationElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    systemRoot=SystemRoot
	//    entities+=Entity*
	//    relations+=Relation*
	//;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//SystemRoot:
	//    'system' name=ID
	//    entities+=Entity*
	//    relations+=Relation*
	//;
	public SystemRootElements getSystemRootAccess() {
		return pSystemRoot;
	}
	
	public ParserRule getSystemRootRule() {
		return getSystemRootAccess().getRule();
	}
	
	//Entity:
	//    Mission | DroneGroup | Drone | Action | ConstraintClasses;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Mission:
	//    'Mission' name=ID '{'
	//        'droneGroup' '=' droneGroup=[DroneGroup]
	//        'actions' '=' '[' actions+=[ActionElement] (',' actions+=[ActionElement])* ']'
	//        ('constraints' '=' '[' (constraints+=[ConstraintClasses] (',' constraints+=[ConstraintClasses])*)? ']')?
	//    '}'
	//;
	public MissionElements getMissionAccess() {
		return pMission;
	}
	
	public ParserRule getMissionRule() {
		return getMissionAccess().getRule();
	}
	
	//ActionElement:
	//    Action | Mission;
	public ActionElementElements getActionElementAccess() {
		return pActionElement;
	}
	
	public ParserRule getActionElementRule() {
		return getActionElementAccess().getRule();
	}
	
	//DroneGroup:
	//    'DroneGroup' name=ID '{'
	//        'drones' '=' '[' drones+=[Drone] (',' drones+=[Drone])* ']'
	//    '}'
	//;
	public DroneGroupElements getDroneGroupAccess() {
		return pDroneGroup;
	}
	
	public ParserRule getDroneGroupRule() {
		return getDroneGroupAccess().getRule();
	}
	
	//Drone:
	//    'Drone' name=ID '{'
	//        'ip' '=' ip=STRING
	//        'serialNumber' '=' serialNumber=STRING
	//    '}'
	//;
	public DroneElements getDroneAccess() {
		return pDrone;
	}
	
	public ParserRule getDroneRule() {
		return getDroneAccess().getRule();
	}
	
	//Action:
	//    'Action' name=ID '{'
	//        'description' '=' description=STRING
	//        'type' '=' type=STRING
	//    '}'
	//;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//ConstraintClasses:
	//    Constraint | PermissionConstraint | RegulatoryConstraint;
	public ConstraintClassesElements getConstraintClassesAccess() {
		return pConstraintClasses;
	}
	
	public ParserRule getConstraintClassesRule() {
		return getConstraintClassesAccess().getRule();
	}
	
	//Constraint:
	//    'Constraint' name=ID '{'
	//        'description' '=' description=STRING
	//    '}';
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//PermissionConstraint:
	//    'PermissionConstraint' name=ID '{'
	//        'description' '=' description=STRING?
	//    '}';
	public PermissionConstraintElements getPermissionConstraintAccess() {
		return pPermissionConstraint;
	}
	
	public ParserRule getPermissionConstraintRule() {
		return getPermissionConstraintAccess().getRule();
	}
	
	//RegulatoryConstraint:
	//    'RegulatoryConstraint' name=ID '{'
	//        'description' '=' description=STRING?
	//    '}';
	public RegulatoryConstraintElements getRegulatoryConstraintAccess() {
		return pRegulatoryConstraint;
	}
	
	public ParserRule getRegulatoryConstraintRule() {
		return getRegulatoryConstraintAccess().getRule();
	}
	
	//Relation:
	//    'Relation' name=ID '{'
	//        'from' '=' from=[Entity]
	//        'to' '=' to=[Entity]
	//        'type' '=' type=STRING  // e.g., "dependency", "uses", "inherits"
	//    '}';
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
