/*
 * generated by Xtext 2.38.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSystemRootSystemRootParserRuleCall_0_0());
				}
				lv_systemRoot_0_0=ruleSystemRoot
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"systemRoot",
						lv_systemRoot_0_0,
						"org.xtext.example.mydsl.MyDsl.SystemRoot");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_1_0());
				}
				lv_entities_1_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"entities",
						lv_entities_1_0,
						"org.xtext.example.mydsl.MyDsl.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRelationsRelationParserRuleCall_2_0());
				}
				lv_relations_2_0=ruleRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"relations",
						lv_relations_2_0,
						"org.xtext.example.mydsl.MyDsl.Relation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSystemRoot
entryRuleSystemRoot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSystemRootRule()); }
	iv_ruleSystemRoot=ruleSystemRoot
	{ $current=$iv_ruleSystemRoot.current; }
	EOF;

// Rule SystemRoot
ruleSystemRoot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSystemRootAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSystemRootAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSystemRootRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemRootAccess().getEntitiesEntityParserRuleCall_2_0());
				}
				lv_entities_2_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRootRule());
					}
					add(
						$current,
						"entities",
						lv_entities_2_0,
						"org.xtext.example.mydsl.MyDsl.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSystemRootAccess().getRelationsRelationParserRuleCall_3_0());
				}
				lv_relations_3_0=ruleRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSystemRootRule());
					}
					add(
						$current,
						"relations",
						lv_relations_3_0,
						"org.xtext.example.mydsl.MyDsl.Relation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityAccess().getMissionParserRuleCall_0());
		}
		this_Mission_0=ruleMission
		{
			$current = $this_Mission_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getDroneGroupParserRuleCall_1());
		}
		this_DroneGroup_1=ruleDroneGroup
		{
			$current = $this_DroneGroup_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getDroneParserRuleCall_2());
		}
		this_Drone_2=ruleDrone
		{
			$current = $this_Drone_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getActionParserRuleCall_3());
		}
		this_Action_3=ruleAction
		{
			$current = $this_Action_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getConstraintClassesParserRuleCall_4());
		}
		this_ConstraintClasses_4=ruleConstraintClasses
		{
			$current = $this_ConstraintClasses_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMission
entryRuleMission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMissionRule()); }
	iv_ruleMission=ruleMission
	{ $current=$iv_ruleMission.current; }
	EOF;

// Rule Mission
ruleMission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mission'
		{
			newLeafNode(otherlv_0, grammarAccess.getMissionAccess().getMissionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMissionAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getMissionAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getMissionAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getMissionAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMissionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='droneGroup'
		{
			newLeafNode(otherlv_5, grammarAccess.getMissionAccess().getDroneGroupKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getMissionAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMissionRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getMissionAccess().getDroneGroupDroneGroupCrossReference_7_0());
				}
			)
		)
		otherlv_8='actions'
		{
			newLeafNode(otherlv_8, grammarAccess.getMissionAccess().getActionsKeyword_8());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getMissionAccess().getEqualsSignKeyword_9());
		}
		otherlv_10='['
		{
			newLeafNode(otherlv_10, grammarAccess.getMissionAccess().getLeftSquareBracketKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMissionRule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getMissionAccess().getActionsActionElementCrossReference_11_0());
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getMissionAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
					}
					otherlv_13=RULE_ID
					{
						newLeafNode(otherlv_13, grammarAccess.getMissionAccess().getActionsActionElementCrossReference_12_1_0());
					}
				)
			)
		)*
		otherlv_14=']'
		{
			newLeafNode(otherlv_14, grammarAccess.getMissionAccess().getRightSquareBracketKeyword_13());
		}
		(
			otherlv_15='constraints'
			{
				newLeafNode(otherlv_15, grammarAccess.getMissionAccess().getConstraintsKeyword_14_0());
			}
			otherlv_16='='
			{
				newLeafNode(otherlv_16, grammarAccess.getMissionAccess().getEqualsSignKeyword_14_1());
			}
			otherlv_17='['
			{
				newLeafNode(otherlv_17, grammarAccess.getMissionAccess().getLeftSquareBracketKeyword_14_2());
			}
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMissionRule());
							}
						}
						otherlv_18=RULE_ID
						{
							newLeafNode(otherlv_18, grammarAccess.getMissionAccess().getConstraintsConstraintClassesCrossReference_14_3_0_0());
						}
					)
				)
				(
					otherlv_19=','
					{
						newLeafNode(otherlv_19, grammarAccess.getMissionAccess().getCommaKeyword_14_3_1_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMissionRule());
								}
							}
							otherlv_20=RULE_ID
							{
								newLeafNode(otherlv_20, grammarAccess.getMissionAccess().getConstraintsConstraintClassesCrossReference_14_3_1_1_0());
							}
						)
					)
				)*
			)?
			otherlv_21=']'
			{
				newLeafNode(otherlv_21, grammarAccess.getMissionAccess().getRightSquareBracketKeyword_14_4());
			}
		)?
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getMissionAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleDroneGroup
entryRuleDroneGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDroneGroupRule()); }
	iv_ruleDroneGroup=ruleDroneGroup
	{ $current=$iv_ruleDroneGroup.current; }
	EOF;

// Rule DroneGroup
ruleDroneGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DroneGroup'
		{
			newLeafNode(otherlv_0, grammarAccess.getDroneGroupAccess().getDroneGroupKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDroneGroupAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getDroneGroupAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getDroneGroupAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getDroneGroupAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDroneGroupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='drones'
		{
			newLeafNode(otherlv_5, grammarAccess.getDroneGroupAccess().getDronesKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getDroneGroupAccess().getEqualsSignKeyword_6());
		}
		otherlv_7='['
		{
			newLeafNode(otherlv_7, grammarAccess.getDroneGroupAccess().getLeftSquareBracketKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDroneGroupRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getDroneGroupAccess().getDronesDroneCrossReference_8_0());
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getDroneGroupAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDroneGroupRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getDroneGroupAccess().getDronesDroneCrossReference_9_1_0());
					}
				)
			)
		)*
		otherlv_11=']'
		{
			newLeafNode(otherlv_11, grammarAccess.getDroneGroupAccess().getRightSquareBracketKeyword_10());
		}
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getDroneGroupAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleDrone
entryRuleDrone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDroneRule()); }
	iv_ruleDrone=ruleDrone
	{ $current=$iv_ruleDrone.current; }
	EOF;

// Rule Drone
ruleDrone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Drone'
		{
			newLeafNode(otherlv_0, grammarAccess.getDroneAccess().getDroneKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDroneAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getDroneAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getDroneAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getDroneAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDroneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='ip'
		{
			newLeafNode(otherlv_5, grammarAccess.getDroneAccess().getIpKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getDroneAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_ip_7_0=RULE_STRING
				{
					newLeafNode(lv_ip_7_0, grammarAccess.getDroneAccess().getIpSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDroneRule());
					}
					setWithLastConsumed(
						$current,
						"ip",
						lv_ip_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='serialNumber'
		{
			newLeafNode(otherlv_8, grammarAccess.getDroneAccess().getSerialNumberKeyword_8());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getDroneAccess().getEqualsSignKeyword_9());
		}
		(
			(
				lv_serialNumber_10_0=RULE_STRING
				{
					newLeafNode(lv_serialNumber_10_0, grammarAccess.getDroneAccess().getSerialNumberSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDroneRule());
					}
					setWithLastConsumed(
						$current,
						"serialNumber",
						lv_serialNumber_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getDroneAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Action'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionAccess().getActionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getActionAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getActionAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='description'
		{
			newLeafNode(otherlv_5, grammarAccess.getActionAccess().getDescriptionKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getActionAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_description_7_0=RULE_STRING
				{
					newLeafNode(lv_description_7_0, grammarAccess.getActionAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='type'
		{
			newLeafNode(otherlv_8, grammarAccess.getActionAccess().getTypeKeyword_8());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getActionAccess().getEqualsSignKeyword_9());
		}
		(
			(
				lv_type_10_0=RULE_STRING
				{
					newLeafNode(lv_type_10_0, grammarAccess.getActionAccess().getTypeSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleConstraintClasses
entryRuleConstraintClasses returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintClassesRule()); }
	iv_ruleConstraintClasses=ruleConstraintClasses
	{ $current=$iv_ruleConstraintClasses.current; }
	EOF;

// Rule ConstraintClasses
ruleConstraintClasses returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstraintClassesAccess().getConstraintParserRuleCall_0());
		}
		this_Constraint_0=ruleConstraint
		{
			$current = $this_Constraint_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstraintClassesAccess().getPermissionConstraintParserRuleCall_1());
		}
		this_PermissionConstraint_1=rulePermissionConstraint
		{
			$current = $this_PermissionConstraint_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConstraintClassesAccess().getRegulatoryConstraintParserRuleCall_2());
		}
		this_RegulatoryConstraint_2=ruleRegulatoryConstraint
		{
			$current = $this_RegulatoryConstraint_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Constraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getConstraintKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getConstraintAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='description'
		{
			newLeafNode(otherlv_5, grammarAccess.getConstraintAccess().getDescriptionKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getConstraintAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_description_7_0=RULE_STRING
				{
					newLeafNode(lv_description_7_0, grammarAccess.getConstraintAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRulePermissionConstraint
entryRulePermissionConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPermissionConstraintRule()); }
	iv_rulePermissionConstraint=rulePermissionConstraint
	{ $current=$iv_rulePermissionConstraint.current; }
	EOF;

// Rule PermissionConstraint
rulePermissionConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PermissionConstraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getPermissionConstraintAccess().getPermissionConstraintKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getPermissionConstraintAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getPermissionConstraintAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getPermissionConstraintAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getPermissionConstraintAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPermissionConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='description'
		{
			newLeafNode(otherlv_5, grammarAccess.getPermissionConstraintAccess().getDescriptionKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getPermissionConstraintAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_description_7_0=RULE_STRING
				{
					newLeafNode(lv_description_7_0, grammarAccess.getPermissionConstraintAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPermissionConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getPermissionConstraintAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleRegulatoryConstraint
entryRuleRegulatoryConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegulatoryConstraintRule()); }
	iv_ruleRegulatoryConstraint=ruleRegulatoryConstraint
	{ $current=$iv_ruleRegulatoryConstraint.current; }
	EOF;

// Rule RegulatoryConstraint
ruleRegulatoryConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RegulatoryConstraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getRegulatoryConstraintAccess().getRegulatoryConstraintKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRegulatoryConstraintAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getRegulatoryConstraintAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getRegulatoryConstraintAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getRegulatoryConstraintAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegulatoryConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='description'
		{
			newLeafNode(otherlv_5, grammarAccess.getRegulatoryConstraintAccess().getDescriptionKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getRegulatoryConstraintAccess().getEqualsSignKeyword_6());
		}
		(
			(
				lv_description_7_0=RULE_STRING
				{
					newLeafNode(lv_description_7_0, grammarAccess.getRegulatoryConstraintAccess().getDescriptionSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegulatoryConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRegulatoryConstraintAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Relation'
		{
			newLeafNode(otherlv_0, grammarAccess.getRelationAccess().getRelationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='name'
		{
			newLeafNode(otherlv_2, grammarAccess.getRelationAccess().getNameKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getRelationAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='from'
		{
			newLeafNode(otherlv_5, grammarAccess.getRelationAccess().getFromKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getRelationAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getRelationAccess().getFromEntityCrossReference_7_0());
				}
			)
		)
		otherlv_8='to'
		{
			newLeafNode(otherlv_8, grammarAccess.getRelationAccess().getToKeyword_8());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getRelationAccess().getEqualsSignKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getRelationAccess().getToEntityCrossReference_10_0());
				}
			)
		)
		otherlv_11='type'
		{
			newLeafNode(otherlv_11, grammarAccess.getRelationAccess().getTypeKeyword_11());
		}
		otherlv_12='='
		{
			newLeafNode(otherlv_12, grammarAccess.getRelationAccess().getEqualsSignKeyword_12());
		}
		(
			(
				lv_type_13_0=RULE_STRING
				{
					newLeafNode(lv_type_13_0, grammarAccess.getRelationAccess().getTypeSTRINGTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_13_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
