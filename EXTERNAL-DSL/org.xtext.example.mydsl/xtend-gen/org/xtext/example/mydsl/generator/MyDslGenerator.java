/**
 * generated by Xtext 2.38.0
 */
package org.xtext.example.mydsl.generator;

import com.google.common.collect.Iterables;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.eclipse.xtext.xbase.lib.XbaseGenerated;
import org.xtext.example.mydsl.myDsl.Action;
import org.xtext.example.mydsl.myDsl.Constraint;
import org.xtext.example.mydsl.myDsl.Drone;
import org.xtext.example.mydsl.myDsl.Entity;
import org.xtext.example.mydsl.myDsl.Mission;
import org.xtext.example.mydsl.myDsl.RegulatoryConstraint;
import org.xtext.example.mydsl.myDsl.Relation;
import org.xtext.example.mydsl.myDsl.SystemRoot;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  public static class AttributeInfo {
    private String name;

    private String type;

    public AttributeInfo(final String name, final String type) {
      this.name = name;
      this.type = type;
    }

    public String javaType() {
      final String type = this.type;
      if (type != null) {
        switch (type) {
          case "STRING":
            return "String";
          case "INT":
            return "int";
          case "FLOAT":
            return "float";
          case "BOOLEAN":
            return "boolean";
          default:
            return this.type;
        }
      } else {
        return this.type;
      }
    }
  }

  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    SystemRoot root = ((SystemRoot[])Conversions.unwrapArray((Iterables.<SystemRoot>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), SystemRoot.class)), SystemRoot.class))[0];
    EList<Entity> _entities = root.getEntities();
    for (final Entity e : _entities) {
      {
        Entity parent = this.findParentEntity(e, root.getRelations());
        String _name = root.getName();
        String _plus = (_name + "/");
        String _name_1 = e.getName();
        String _plus_1 = (_plus + _name_1);
        String _plus_2 = (_plus_1 + ".java");
        fsa.generateFile(_plus_2, this.compile(e, root, parent));
      }
    }
  }

  public Entity findParentEntity(final Entity entity, final List<Relation> relations) {
    for (final Relation relation : relations) {
      if ((Objects.equals(relation.getType(), "inherits") && Objects.equals(relation.getFrom(), entity))) {
        return relation.getTo();
      }
    }
    return null;
  }

  public CharSequence compile(final Entity entity, final SystemRoot root, final Entity parentClass) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method getEntityAttributes(EnergyModel) from the type MyDslGenerator refers to the missing type EnergyModel"
      + "\nThe method getEntityAttributes(EnergyModel) from the type MyDslGenerator refers to the missing type EnergyModel"
      + "\nThe method getEntityAttributes(EnergyModel) from the type MyDslGenerator refers to the missing type EnergyModel"
      + "\nThe method getEntityAttributes(EnergyModel) from the type MyDslGenerator refers to the missing type EnergyModel"
      + "\nThe method getEntityAttributes(EnergyModel) from the type MyDslGenerator refers to the missing type EnergyModel");
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final Mission mission) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("missionID", "STRING");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("missionType", "STRING");
    result.add(_attributeInfo_1);
    MyDslGenerator.AttributeInfo _attributeInfo_2 = new MyDslGenerator.AttributeInfo("startLocation", "STRING");
    result.add(_attributeInfo_2);
    MyDslGenerator.AttributeInfo _attributeInfo_3 = new MyDslGenerator.AttributeInfo("endLocation", "STRING");
    result.add(_attributeInfo_3);
    MyDslGenerator.AttributeInfo _attributeInfo_4 = new MyDslGenerator.AttributeInfo("priority", "INT");
    result.add(_attributeInfo_4);
    MyDslGenerator.AttributeInfo _attributeInfo_5 = new MyDslGenerator.AttributeInfo("estimatedTime", "FLOAT");
    result.add(_attributeInfo_5);
    MyDslGenerator.AttributeInfo _attributeInfo_6 = new MyDslGenerator.AttributeInfo("drones", "List<Object>");
    result.add(_attributeInfo_6);
    MyDslGenerator.AttributeInfo _attributeInfo_7 = new MyDslGenerator.AttributeInfo("phases", "List<Object>");
    result.add(_attributeInfo_7);
    MyDslGenerator.AttributeInfo _attributeInfo_8 = new MyDslGenerator.AttributeInfo("constraints", "List<Object>");
    result.add(_attributeInfo_8);
    MyDslGenerator.AttributeInfo _attributeInfo_9 = new MyDslGenerator.AttributeInfo("events", "List<Object>");
    result.add(_attributeInfo_9);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final Drone drone) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("type", "STRING");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("batterCapacity", "FLOAT");
    result.add(_attributeInfo_1);
    MyDslGenerator.AttributeInfo _attributeInfo_2 = new MyDslGenerator.AttributeInfo("maxFlightTime", "FLOAT");
    result.add(_attributeInfo_2);
    MyDslGenerator.AttributeInfo _attributeInfo_3 = new MyDslGenerator.AttributeInfo("payloadCapacity", "FLOAT");
    result.add(_attributeInfo_3);
    MyDslGenerator.AttributeInfo _attributeInfo_4 = new MyDslGenerator.AttributeInfo("role", "STRING");
    result.add(_attributeInfo_4);
    MyDslGenerator.AttributeInfo _attributeInfo_5 = new MyDslGenerator.AttributeInfo("energyModels", "List<Object>");
    result.add(_attributeInfo_5);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final /* EnergyModel */Object model) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("consumptionRate", "FLOAT");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("batteryHealth", "FLOAT");
    result.add(_attributeInfo_1);
    MyDslGenerator.AttributeInfo _attributeInfo_2 = new MyDslGenerator.AttributeInfo("rechargeTime", "FLOAT");
    result.add(_attributeInfo_2);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final /* Phase */Object phase) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("phaseType", "STRING");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("energyUsage", "FLOAT");
    result.add(_attributeInfo_1);
    MyDslGenerator.AttributeInfo _attributeInfo_2 = new MyDslGenerator.AttributeInfo("subPhases", "List<Object>");
    result.add(_attributeInfo_2);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final /* SubPhase */Object subPhase) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("subPhaseType", "STRING");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("duration", "FLOAT");
    result.add(_attributeInfo_1);
    MyDslGenerator.AttributeInfo _attributeInfo_2 = new MyDslGenerator.AttributeInfo("actions", "List<Object>");
    result.add(_attributeInfo_2);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final Action action) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("actionType", "STRING");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("inputOutput", "STRING");
    result.add(_attributeInfo_1);
    MyDslGenerator.AttributeInfo _attributeInfo_2 = new MyDslGenerator.AttributeInfo("energyUsage", "FLOAT");
    result.add(_attributeInfo_2);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final Constraint constraint) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("constraintType", "STRING");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("description", "STRING");
    result.add(_attributeInfo_1);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final /* SafetyConstraint */Object constraint) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("minBattery", "FLOAT");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("maxWindSpeed", "FLOAT");
    result.add(_attributeInfo_1);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final RegulatoryConstraint constraint) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("flightPermission", "BOOLEAN");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("altitudeLimit", "INT");
    result.add(_attributeInfo_1);
    return result;
  }

  protected List<MyDslGenerator.AttributeInfo> _getEntityAttributes(final /* MissionEvent */Object event) {
    final ArrayList<MyDslGenerator.AttributeInfo> result = new ArrayList<MyDslGenerator.AttributeInfo>();
    MyDslGenerator.AttributeInfo _attributeInfo = new MyDslGenerator.AttributeInfo("eventType", "STRING");
    result.add(_attributeInfo);
    MyDslGenerator.AttributeInfo _attributeInfo_1 = new MyDslGenerator.AttributeInfo("impactLevel", "INT");
    result.add(_attributeInfo_1);
    MyDslGenerator.AttributeInfo _attributeInfo_2 = new MyDslGenerator.AttributeInfo("responseAction", "STRING");
    result.add(_attributeInfo_2);
    return result;
  }

  @XbaseGenerated
  public List<MyDslGenerator.AttributeInfo> getEntityAttributes(final EnergyModel constraint) {
    if (constraint != null) {
      return _getEntityAttributes(constraint);
    } else if (constraint != null) {
      return _getEntityAttributes(constraint);
    } else if (constraint != null) {
      return _getEntityAttributes(constraint);
    } else if (constraint != null) {
      return _getEntityAttributes(constraint);
    } else if (constraint != null) {
      return _getEntityAttributes(constraint);
    } else if (constraint != null) {
      return _getEntityAttributes(constraint);
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(constraint).toString());
    }
  }
}
