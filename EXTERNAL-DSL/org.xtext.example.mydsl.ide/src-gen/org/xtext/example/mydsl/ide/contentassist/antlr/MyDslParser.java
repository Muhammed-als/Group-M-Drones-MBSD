/*
 * generated by Xtext 2.38.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEntityAccess().getAlternatives(), "rule__Entity__Alternatives");
			builder.put(grammarAccess.getConstraintAccess().getAlternatives(), "rule__Constraint__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getSystemRootAccess().getGroup(), "rule__SystemRoot__Group__0");
			builder.put(grammarAccess.getMissionAccess().getGroup(), "rule__Mission__Group__0");
			builder.put(grammarAccess.getMissionAccess().getGroup_24(), "rule__Mission__Group_24__0");
			builder.put(grammarAccess.getMissionAccess().getGroup_28(), "rule__Mission__Group_28__0");
			builder.put(grammarAccess.getMissionAccess().getGroup_32(), "rule__Mission__Group_32__0");
			builder.put(grammarAccess.getMissionAccess().getGroup_36(), "rule__Mission__Group_36__0");
			builder.put(grammarAccess.getDroneAccess().getGroup(), "rule__Drone__Group__0");
			builder.put(grammarAccess.getDroneAccess().getGroup_21(), "rule__Drone__Group_21__0");
			builder.put(grammarAccess.getEnergyModelAccess().getGroup(), "rule__EnergyModel__Group__0");
			builder.put(grammarAccess.getPhaseAccess().getGroup(), "rule__Phase__Group__0");
			builder.put(grammarAccess.getPhaseAccess().getGroup_12(), "rule__Phase__Group_12__0");
			builder.put(grammarAccess.getSubPhaseAccess().getGroup(), "rule__SubPhase__Group__0");
			builder.put(grammarAccess.getSubPhaseAccess().getGroup_12(), "rule__SubPhase__Group_12__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getSafetyConstraintAccess().getGroup(), "rule__SafetyConstraint__Group__0");
			builder.put(grammarAccess.getRegulatoryConstraintAccess().getGroup(), "rule__RegulatoryConstraint__Group__0");
			builder.put(grammarAccess.getMissionEventAccess().getGroup(), "rule__MissionEvent__Group__0");
			builder.put(grammarAccess.getModelAccess().getSystemRootAssignment_0(), "rule__Model__SystemRootAssignment_0");
			builder.put(grammarAccess.getModelAccess().getEntitiesAssignment_1(), "rule__Model__EntitiesAssignment_1");
			builder.put(grammarAccess.getSystemRootAccess().getNameAssignment_1(), "rule__SystemRoot__NameAssignment_1");
			builder.put(grammarAccess.getSystemRootAccess().getEntitiesAssignment_2(), "rule__SystemRoot__EntitiesAssignment_2");
			builder.put(grammarAccess.getMissionAccess().getNameAssignment_1(), "rule__Mission__NameAssignment_1");
			builder.put(grammarAccess.getMissionAccess().getIdAssignment_5(), "rule__Mission__IdAssignment_5");
			builder.put(grammarAccess.getMissionAccess().getMissionTypeAssignment_8(), "rule__Mission__MissionTypeAssignment_8");
			builder.put(grammarAccess.getMissionAccess().getStartLocationAssignment_11(), "rule__Mission__StartLocationAssignment_11");
			builder.put(grammarAccess.getMissionAccess().getEndLocationAssignment_14(), "rule__Mission__EndLocationAssignment_14");
			builder.put(grammarAccess.getMissionAccess().getPriorityAssignment_17(), "rule__Mission__PriorityAssignment_17");
			builder.put(grammarAccess.getMissionAccess().getEstimatedTimeAssignment_20(), "rule__Mission__EstimatedTimeAssignment_20");
			builder.put(grammarAccess.getMissionAccess().getAddDronesAssignment_23(), "rule__Mission__AddDronesAssignment_23");
			builder.put(grammarAccess.getMissionAccess().getAddDronesAssignment_24_1(), "rule__Mission__AddDronesAssignment_24_1");
			builder.put(grammarAccess.getMissionAccess().getAddPhasesAssignment_27(), "rule__Mission__AddPhasesAssignment_27");
			builder.put(grammarAccess.getMissionAccess().getAddPhasesAssignment_28_1(), "rule__Mission__AddPhasesAssignment_28_1");
			builder.put(grammarAccess.getMissionAccess().getAddConstraintsAssignment_31(), "rule__Mission__AddConstraintsAssignment_31");
			builder.put(grammarAccess.getMissionAccess().getAddConstraintsAssignment_32_1(), "rule__Mission__AddConstraintsAssignment_32_1");
			builder.put(grammarAccess.getMissionAccess().getAddEventsAssignment_35(), "rule__Mission__AddEventsAssignment_35");
			builder.put(grammarAccess.getMissionAccess().getAddEventsAssignment_36_1(), "rule__Mission__AddEventsAssignment_36_1");
			builder.put(grammarAccess.getDroneAccess().getNameAssignment_1(), "rule__Drone__NameAssignment_1");
			builder.put(grammarAccess.getDroneAccess().getTypeAssignment_5(), "rule__Drone__TypeAssignment_5");
			builder.put(grammarAccess.getDroneAccess().getBatterCapacityAssignment_8(), "rule__Drone__BatterCapacityAssignment_8");
			builder.put(grammarAccess.getDroneAccess().getMaxFlightTimeAssignment_11(), "rule__Drone__MaxFlightTimeAssignment_11");
			builder.put(grammarAccess.getDroneAccess().getPayloadCapacityAssignment_14(), "rule__Drone__PayloadCapacityAssignment_14");
			builder.put(grammarAccess.getDroneAccess().getRoleAssignment_17(), "rule__Drone__RoleAssignment_17");
			builder.put(grammarAccess.getDroneAccess().getAddEnergyModelAssignment_20(), "rule__Drone__AddEnergyModelAssignment_20");
			builder.put(grammarAccess.getDroneAccess().getAddEnergyModelAssignment_21_1(), "rule__Drone__AddEnergyModelAssignment_21_1");
			builder.put(grammarAccess.getEnergyModelAccess().getNameAssignment_1(), "rule__EnergyModel__NameAssignment_1");
			builder.put(grammarAccess.getEnergyModelAccess().getConsumptionRateAssignment_5(), "rule__EnergyModel__ConsumptionRateAssignment_5");
			builder.put(grammarAccess.getEnergyModelAccess().getBatteryHealthAssignment_8(), "rule__EnergyModel__BatteryHealthAssignment_8");
			builder.put(grammarAccess.getEnergyModelAccess().getRechargeTimeAssignment_11(), "rule__EnergyModel__RechargeTimeAssignment_11");
			builder.put(grammarAccess.getPhaseAccess().getNameAssignment_1(), "rule__Phase__NameAssignment_1");
			builder.put(grammarAccess.getPhaseAccess().getPhaseTypeAssignment_5(), "rule__Phase__PhaseTypeAssignment_5");
			builder.put(grammarAccess.getPhaseAccess().getEnergyUsageAssignment_8(), "rule__Phase__EnergyUsageAssignment_8");
			builder.put(grammarAccess.getPhaseAccess().getAddSubPhaseAssignment_11(), "rule__Phase__AddSubPhaseAssignment_11");
			builder.put(grammarAccess.getPhaseAccess().getAddSubPhaseAssignment_12_1(), "rule__Phase__AddSubPhaseAssignment_12_1");
			builder.put(grammarAccess.getSubPhaseAccess().getNameAssignment_1(), "rule__SubPhase__NameAssignment_1");
			builder.put(grammarAccess.getSubPhaseAccess().getSubPhaseTypeAssignment_5(), "rule__SubPhase__SubPhaseTypeAssignment_5");
			builder.put(grammarAccess.getSubPhaseAccess().getDurationAssignment_8(), "rule__SubPhase__DurationAssignment_8");
			builder.put(grammarAccess.getSubPhaseAccess().getAddActionAssignment_11(), "rule__SubPhase__AddActionAssignment_11");
			builder.put(grammarAccess.getSubPhaseAccess().getAddActionAssignment_12_1(), "rule__SubPhase__AddActionAssignment_12_1");
			builder.put(grammarAccess.getActionAccess().getNameAssignment_1(), "rule__Action__NameAssignment_1");
			builder.put(grammarAccess.getActionAccess().getActionTypeAssignment_5(), "rule__Action__ActionTypeAssignment_5");
			builder.put(grammarAccess.getActionAccess().getInputOutputAssignment_8(), "rule__Action__InputOutputAssignment_8");
			builder.put(grammarAccess.getActionAccess().getEnergyUsageAssignment_11(), "rule__Action__EnergyUsageAssignment_11");
			builder.put(grammarAccess.getSafetyConstraintAccess().getNameAssignment_1(), "rule__SafetyConstraint__NameAssignment_1");
			builder.put(grammarAccess.getSafetyConstraintAccess().getMinBatteryAssignment_5(), "rule__SafetyConstraint__MinBatteryAssignment_5");
			builder.put(grammarAccess.getSafetyConstraintAccess().getMaxWindSpeedAssignment_8(), "rule__SafetyConstraint__MaxWindSpeedAssignment_8");
			builder.put(grammarAccess.getRegulatoryConstraintAccess().getNameAssignment_1(), "rule__RegulatoryConstraint__NameAssignment_1");
			builder.put(grammarAccess.getRegulatoryConstraintAccess().getFlightPermissionAssignment_5(), "rule__RegulatoryConstraint__FlightPermissionAssignment_5");
			builder.put(grammarAccess.getRegulatoryConstraintAccess().getAltitudeLimitAssignment_8(), "rule__RegulatoryConstraint__AltitudeLimitAssignment_8");
			builder.put(grammarAccess.getMissionEventAccess().getNameAssignment_1(), "rule__MissionEvent__NameAssignment_1");
			builder.put(grammarAccess.getMissionEventAccess().getEventTypeAssignment_5(), "rule__MissionEvent__EventTypeAssignment_5");
			builder.put(grammarAccess.getMissionEventAccess().getImpactLevelAssignment_8(), "rule__MissionEvent__ImpactLevelAssignment_8");
			builder.put(grammarAccess.getMissionEventAccess().getResponseActionAssignment_11(), "rule__MissionEvent__ResponseActionAssignment_11");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
