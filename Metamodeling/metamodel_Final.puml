@startuml

' === Abstract/Interface Types ===
class ActionElement {
  action: Action
  mission:Mission
}
note right of ActionElement
  Abstract type allowing a Mission
  to include both Actions and
  other Missions in its action list
end note

' === Concrete Classes ===
class Mission {
    name: id
    droneGroup: DroneGroup
    actions: List<ActionElement>
    constraints: List<Constraint>
}
note left of Mission
  Represents a high-level task
  assigned to a drone group.
  Can include Actions or nested Missions.
end note

class DroneGroup {
    name: id
    drones: List<Drone>
}
note right of DroneGroup
  Groups multiple drones
  for coordinated missions.
end note

class Drone {
    name: id
    ip: string
    serialNumber: string
}
note right of Drone
  Represents an individual drone
  with its connection and identification info.
end note

class Action {
    name: id
    description: string
    type: string
}
note right of Action
  A concrete task like "Scan" or "Deliver"
  executed by a drone.
end note

abstract Constraint {
    name: id
    description: string
}
note right of Constraint
  Base class for all constraints
  (e.g., regulatory or permission-based).
end note

class PermissionConstraint {
    name: id
    description: string
}
note right of PermissionConstraint
  Ensures mission permissions, e.g., battery level.
end note

class RegulatoryConstraint {
    name: id
    description: string
}
note right of RegulatoryConstraint
  Ensures legal/regulatory compliance.
end note

class Relation {
    name: id
    from: Entity
    to: Entity
    type: string
}
note bottom of Relation
  Defines semantic links between entities,
  like inheritance or dependencies.
end note

abstract class Entity
note right of Entity
  A general type for any component
  that can participate in a relation.
end note

abstract class Model {
  name: string
  entities: List<Entity>
  relations: List<Relation>
}

Model <|-- Entity
Model <|-- Relation


Constraint <|-- PermissionConstraint
Constraint <|-- RegulatoryConstraint

Entity <|-- Mission
Entity <|-- DroneGroup
Entity <|-- Drone
Entity <|-- Action
Entity <|-- Constraint

' === Relationships ===
Mission "1" --> "1" DroneGroup : contains
Mission "1" --> "1..*" ActionElement : triggers
Mission "1" --> "0..*" Constraint : constraints
DroneGroup "1" --> "1..*" Drone : contains
ActionElement "1" --> "1..*" Mission : contains
ActionElement "1" --> "1..*" Action : contains

@enduml
